package grafic;

import java.util.*;
import java.awt.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import liceu.*;

public class PanouListaClase extends javax.swing.JPanel implements
        ListSelectionListener
{
    private JButton adauga, sterge;
    
    public PanouListaClase()
    {
        initComponents();

        adauga = new JButton("Adăugaţi");
        adauga.addActionListener(new ListenerAdaugaClasa());
        sterge = new JButton("Ştergeţi");
        sterge.addActionListener(new ListenerStergeClasa());
        sterge.setEnabled(false);
        jPanel1.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        c.gridx = c.gridy = 0;
        c.insets = new Insets(0, 0, 0, 3);
        jPanel1.add(adauga, c);
        c.gridx = 1;
        c.insets = new Insets(0, 3, 0, 1);
        jPanel1.add(sterge, c);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(this);
    }
    
    public void adaugaModel(DefaultListModel model)
    {
        jList1.setModel(model);
    }
    
    public JList getLista()
    {
        return jList1;
    }
    
    public void valueChanged(ListSelectionEvent e)
    {
        if (e.getValueIsAdjusting() == false && jList1.getSelectedIndex() != -1)
        {
            sterge.setEnabled(true);
            JTable tabel = ((PanouClaseElevi)getParent()).getTabel();
            
            DefaultTableModel model = new DefaultTableModel()
            {
                public Class getColumnClass(int columnIndex)
                {
                    return String.class;
                }
                public boolean isCellEditable(int linie, int coloana)
                {
                    return false;
                }
            };
            tabel.setModel(model);
            ArrayList<Vector<String>> coloane = new ArrayList<Vector<String>>();
            for (int i = 0; i < 6; ++i)
                coloane.add(new Vector<String>());
            
            ArrayList<Clasa> lista = ((PanouClaseElevi)getParent()).
                    getListaClase();
            Clasa clasaSelectata = lista.get(jList1.getSelectedIndex());
            ((PanouClaseElevi)getParent()).setClasa(clasaSelectata);
            int numarCurent = 0;
            for (Iterator<Elev> i = clasaSelectata.iteratorElevi();
                    i.hasNext(); )
            {
                Elev elev = i.next();
                coloane.get(0).add("" + ++numarCurent);
                coloane.get(1).add(elev.getNume());
                coloane.get(2).add(elev.getPrenume());
                coloane.get(3).add(elev.getNumeUtilizator());
                coloane.get(4).add(elev.getCNP());
                coloane.get(5).add(elev.getDataNasterii());
            }
            
            model.addColumn("<html><div style=\"text-align: center;\">Nr.<br/" +
                ">crt.</div></html>", coloane.get(0));
            model.addColumn("Nume", coloane.get(1));
            model.addColumn("Prenume", coloane.get(2));
            model.addColumn("<html><div style=\"text-align: center;\">Nume<br" +
                "/>utilizator</div></html>", coloane.get(3));
            model.addColumn("CNP", coloane.get(4));
            model.addColumn("<html><div style=\"text-align: center;\">Data<br" +
                "/>naşterii</div></html>", coloane.get(5));
        
            tabel.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            tabel.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabel.getColumnModel().getColumn(2).setPreferredWidth(140);
            tabel.getColumnModel().getColumn(3).setPreferredWidth(140);
            tabel.getColumnModel().getColumn(4).setPreferredWidth(100);
            
            ((PanouClaseElevi)getParent()).getAdaugaElevi().setEnabled(true);
        }
        if (e.getValueIsAdjusting() == false && jList1.getSelectedIndex() == -1)
        {
            sterge.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();

        jLabel1.setText("Clase:");

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
